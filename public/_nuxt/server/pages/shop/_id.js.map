{"version":3,"file":"pages/shop/_id.js","sources":["webpack:///./src/services/profile.services.ts","webpack:///./src/components/Viewer.vue?83b4","webpack:///./src/charts/BarChart.js","webpack:///./src/components/Viewer.vue","webpack:///./src/components/Viewer.vue?207b","webpack:///../../../src/components/VDataTable/VSimpleTable.ts","webpack:///./src/components/Viewer.vue?fe2a","webpack:///./src/services/product.services.ts","webpack:///./node_modules/vuetify/src/components/VDataTable/VSimpleTable.sass","webpack:///../../../src/components/VGrid/VCol.ts","webpack:///../../../src/components/VGrid/VRow.ts","webpack:///./src/pages/shop/_id.vue?d9d0","webpack:///./src/pages/shop/_id.vue","webpack:///./src/pages/shop/_id.vue?3444","webpack:///./src/pages/shop/_id.vue?dbdc"],"sourcesContent":["import _ from 'lodash';\r\nimport uniqid from 'uniqid';\r\nimport { firestore } from 'firebase';\r\nimport { IFirebaseConfig, IProfile } from './common';\r\n\r\nexport abstract class ProfileService {\r\n    abstract save(): void;\r\n    abstract find(filter: any): Promise<IProfile[] | any>;\r\n    abstract findOne(filter: any): Promise<IProfile | any>;\r\n    abstract create(data: IProfile): Promise<IProfile | any>;\r\n    abstract update(filter: any, data: any): Promise<IProfile[] | any>;\r\n    abstract updateOne(filter: any, data: any): Promise<IProfile | any>;\r\n    abstract delete(filter: any): Promise<IProfile[] | any>;\r\n    abstract deleteOne(filter: any): Promise<IProfile | any>;\r\n};\r\n\r\nexport class LocalProfileService extends ProfileService {\r\n\r\n    profiles: { [id: string]: IProfile };\r\n\r\n    constructor() {\r\n        super();\r\n        let data = localStorage.getItem(\"profiles\");\r\n        if (data)\r\n            this.profiles = _.mapValues(JSON.parse(data), function (obj: any) {\r\n                obj.createdAt = new Date(obj.createdAt);\r\n                obj.updatedAt = new Date(obj.updatedAt);\r\n                return obj;\r\n            });\r\n        else\r\n            this.profiles = {};\r\n    }\r\n\r\n    /**\r\n     * Save current changes to persistent storage.\r\n     */\r\n    async save() {\r\n        localStorage.setItem(\"profiles\", JSON.stringify(this.profiles));\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Finds all elements matching filters.\r\n     */\r\n    async find(filter: any) {\r\n        return _.filter(_.values(this.profiles), filter);\r\n    }\r\n\r\n    /**\r\n     * Finds one element matching filters.\r\n     */\r\n    async findOne(filter: any) {\r\n        if (filter.id && _.keys(filter).length === 1)\r\n            return this.profiles[filter.id];\r\n        return _.find(_.values(this.profiles), filter);\r\n    }\r\n\r\n    /**\r\n     * Creates a new entity instance.\r\n     */\r\n    async create(profile: IProfile) {\r\n        if(!profile.id)\r\n            profile.id = uniqid();\r\n        profile.createdAt = new Date();\r\n        profile.updatedAt = new Date();\r\n        this.profiles[profile.id] = profile;\r\n        return profile;\r\n    }\r\n\r\n    /**\r\n     * Updates all entity instances matching filters.\r\n     */\r\n    async update(filter: any, data: any) {\r\n        if (data['id'])\r\n            delete data['id'];\r\n        let selectedProfiles = await this.find(filter);\r\n        for(let profile of selectedProfiles) {\r\n            data['id'] = profile.id;\r\n            profile = _.merge(profile, data);\r\n            profile.updatedAt = new Date();\r\n            this.profiles[profile.id] = profile;\r\n        }\r\n        return selectedProfiles;\r\n    }\r\n\r\n    /**\r\n     * Updates one entity instance matching filters.\r\n     */\r\n    async updateOne(filter: any, data: any) {\r\n        if (data['id'])\r\n            delete data['id'];\r\n        let selectedProfile = await this.findOne(filter);\r\n        selectedProfile = _.merge(selectedProfile, data);\r\n        this.profiles[selectedProfile.id] = selectedProfile;\r\n        return selectedProfile;\r\n    }\r\n\r\n    /**\r\n     * Deletes all entity instances matching filters.\r\n     */\r\n    async delete(filter: any) {\r\n        let selectedProfiles = await this.find(filter);\r\n        for(let profile of selectedProfiles) {\r\n            delete this.profiles[profile.id];\r\n        }\r\n        return selectedProfiles;\r\n    }\r\n\r\n    /**\r\n     * Deletes one entity instance matching filters.\r\n     */\r\n    async deleteOne(filter: any) {\r\n        let selectedProfile = await this.findOne(filter);\r\n        console.log(selectedProfile);\r\n        delete this.profiles[selectedProfile.id];\r\n        return selectedProfile;\r\n    }\r\n\r\n}\r\n\r\nexport class FirebaseProfileService extends ProfileService {\r\n\r\n    db: firestore.Firestore;\r\n    config: IFirebaseConfig;\r\n\r\n    constructor(public database: firestore.Firestore, config: IFirebaseConfig = { collection: \"profiles\" }) {\r\n        super();\r\n        this.db = database;\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Save current changes to persistent storage.\r\n     * Firestore changes are handled by client library so no modifications here.\r\n     */\r\n    async save() {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Finds all elements matching filters.\r\n     */\r\n    async find(filter: any) {\r\n        let snapshot = await this.db.collection(this.config.collection).get();\r\n        if (snapshot.empty)\r\n            return [];\r\n        let profiles: IProfile[] = [];\r\n        snapshot.forEach(doc => profiles.push(<IProfile> doc.data()));\r\n        return _.filter(profiles, filter);\r\n    }\r\n\r\n    /**\r\n     * Finds one element matching filters.\r\n     */\r\n    async findOne(filter: any) {\r\n        if (filter.id && _.keys(filter).length === 1)\r\n            return await (await this.db.collection(this.config.collection).doc(filter.id).get()).data();\r\n        let profiles = await this.find(filter);\r\n        let profile = profiles.find(profile => _.isMatch(profile, filter));\r\n        return <IProfile>profile;\r\n    }\r\n\r\n    /**\r\n     * Creates a new entity instance.\r\n     */\r\n    async create(profile: IProfile) {\r\n        if(!profile.id)\r\n            profile.id = uniqid();\r\n        profile.createdAt = new Date();\r\n        profile.updatedAt = new Date();\r\n        await this.db.collection(this.config.collection).doc(profile.id).set(profile);\r\n        return profile;\r\n    }\r\n\r\n    /**\r\n     * Updates all entity instances matching filters.\r\n     */\r\n    async update(filter: any, data: any) {\r\n        let selectedProfiles = await this.find(filter);\r\n        for(let profile of selectedProfiles) {\r\n            data['id'] = profile.id;\r\n            profile = _.merge(profile, data);\r\n            profile.updatedAt = new Date();\r\n            await this.db.collection(this.config.collection).doc(profile.id).set(data);\r\n        }\r\n        return selectedProfiles;\r\n    }\r\n\r\n    /**\r\n     * Updates one entity instance matching filters.\r\n     */\r\n    async updateOne(filter: any, data: any) {\r\n        if (data['id'])\r\n            delete data['id'];\r\n        let selectedProfile = await this.findOne(filter);\r\n        selectedProfile = _.merge(selectedProfile, data);\r\n        await this.db.collection(this.config.collection).doc(selectedProfile.id).set(selectedProfile);\r\n        return <IProfile>selectedProfile;\r\n    }\r\n\r\n    /**\r\n     * Deletes all entity instances matching filters.\r\n     */\r\n    async delete(filter: any) {\r\n        let selectedProfiles = await this.find(filter);\r\n        for(let profile of selectedProfiles) {\r\n            await this.db.collection(this.config.collection).doc(profile.id).delete();\r\n        }\r\n        return selectedProfiles;\r\n    }\r\n\r\n    /**\r\n     * Deletes one entity instance matching filters.\r\n     */\r\n    async deleteOne(filter: any) {\r\n        let selectedProfile = await this.findOne(filter);\r\n        console.log(selectedProfile);\r\n        await this.db.collection(this.config.collection).doc(selectedProfile.id).delete();\r\n        return <IProfile>selectedProfile;\r\n    }\r\n\r\n}\r\n\r\nconst DefaultService = (process.env.DEV) ? LocalProfileService : FirebaseProfileService\r\n\r\nexport default DefaultService;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fluid\":\"\"}},[(_vm.profile)?[_c('div',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\"}},[_vm._v(\"\\n                    Name: \"+_vm._s(_vm.profile.name)+\"\\n                \")]),_vm._v(\" \"),_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\"}},[_vm._v(\"\\n                    Family Member: \"+_vm._s(_vm.profile.family)+\"\\n                \")]),_vm._v(\" \"),_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\"}},[_vm._v(\"\\n                    Contact No.: \"+_vm._s(_vm.profile.contact)+\"\\n                \")]),_vm._v(\" \"),_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\"}},[_vm._v(\"\\n                    Email ID: \"+_vm._s(_vm.profile.email)+\"\\n                \")]),_vm._v(\" \"),_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"12\"}},[_vm._v(\"\\n                    Postal Address: \"+_vm._s(_vm.profile.postal)+\"\\n                \")]),_vm._v(\" \"),_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\"}},[_vm._v(\"\\n                    Date of Birth: \"+_vm._s(_vm.profile.dob)+\"\\n                \")])],1),_vm._v(\" \"),_c('v-row',{attrs:{\"justify\":\"center\"}},[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-simple-table',{attrs:{\"fixed-header\":\"\",\"height\":\"300px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(){return [_c('thead',[_c('tr',[_c('th',{attrs:{\"colspan\":\"3\"}}),_vm._v(\" \"),_c('th',{attrs:{\"colspan\":\"1\"}},[_vm._v(\"Life\")]),_vm._v(\" \"),_c('th',{attrs:{\"colspan\":\"1\"}},[_vm._v(\"Cost\")]),_vm._v(\" \"),_c('th',{attrs:{\"colspan\":\"2\",\"scope\":\"colgroup\"}},[_vm._v(\"Effective Cost\")]),_vm._v(\" \"),_c('th',{attrs:{\"colspan\":\"2\"}}),_vm._v(\" \"),_c('th',{attrs:{\"colspan\":\"1\"}},[_vm._v(\"Life\")]),_vm._v(\" \"),_c('th',{attrs:{\"colspan\":\"1\"}},[_vm._v(\"Cost\")]),_vm._v(\" \"),_c('th',{attrs:{\"colspan\":\"2\",\"scope\":\"colgroup\"}},[_vm._v(\"Effective Cost\")])]),_vm._v(\" \"),_c('tr',[_c('th',{staticClass:\"text-left\"},[_vm._v(\"Type of Product\")]),_vm._v(\" \"),_c('th',{staticClass:\"text-left\"},[_vm._v(\"Brand\")]),_vm._v(\" \"),_c('th',{staticClass:\"text-left\"},[_vm._v(\"Size\")]),_vm._v(\" \"),_c('th',{staticClass:\"text-left\"},[_vm._v(\"(Months)\")]),_vm._v(\" \"),_c('th',{staticClass:\"text-left\"},[_vm._v(\"DAP (Rs.)\")]),_vm._v(\" \"),_c('th',{staticClass:\"text-left\"},[_vm._v(\"Monthly\")]),_vm._v(\" \"),_c('th',{staticClass:\"text-left\"},[_vm._v(\"Yearly\")]),_vm._v(\" \"),_c('th',{staticClass:\"text-left\"},[_vm._v(\"AMWAY\")]),_vm._v(\" \"),_c('th',{staticClass:\"text-left\"},[_vm._v(\"Size\")]),_vm._v(\" \"),_c('th',{staticClass:\"text-left\"},[_vm._v(\"(Months)\")]),_vm._v(\" \"),_c('th',{staticClass:\"text-left\"},[_vm._v(\"DAP (Rs.)\")]),_vm._v(\" \"),_c('th',{staticClass:\"text-left\"},[_vm._v(\"Monthly\")]),_vm._v(\" \"),_c('th',{staticClass:\"text-left\"},[_vm._v(\"Yearly\")])])]),_vm._v(\" \"),_c('tbody',[_vm._l((_vm.profile.products),function(product,index){return _c('tr',{key:index},[_c('td',[_vm._v(_vm._s(product.type))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(product.brand))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(product.size))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(product.life))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(product.cost))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(product.monthly))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(product.yearly))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(product.alt.name))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(product.alt.size))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(product.alt.life))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(product.alt.cost))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(product.alt.monthly))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(product.alt.yearly))])])}),_vm._v(\" \"),_c('tr',[_c('td',{attrs:{\"colspan\":\"6\"}},[_vm._v(\"Total\")]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.sum(_vm.profile.products, 'yearly')))]),_vm._v(\" \"),_c('td',{attrs:{\"colspan\":\"5\"}},[_vm._v(\"Total\")]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.sum(_vm.profile.products, 'yearly', true)))])]),_vm._v(\" \"),_c('tr',[_c('td',{attrs:{\"colspan\":\"12\"}},[_vm._v(\"Yearly Savings\")]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.sum(_vm.profile.products, 'yearly') - _vm.sum(_vm.profile.products, 'yearly', true)))])])],2)]},proxy:true}],null,false,685909999)})],1),_vm._v(\" \"),_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\"}},[(!_vm.chart.loading)?_c('bar-chart',{attrs:{\"chart-data\":_vm.chart.data,\":options\":_vm.chart.options}}):_vm._e()],1)],1)],1)]:[_c('div',{staticClass:\"text-center\"},[_c('v-progress-circular',{attrs:{\"size\":50,\"color\":\"primary\",\"indeterminate\":\"\"}})],1)]],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { Bar, mixins } from 'vue-chartjs';\r\n\r\nconst { reactiveProp } = mixins;\r\n\r\nexport default {\r\n    extends: Bar,\r\n    props: ['options'],\r\n    mixins: [reactiveProp],\r\n    mounted() {\r\n        console.log(this.chartData, this.options);\r\n        this.renderChart(this.chartData, this.options);\r\n    }\r\n}\r\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport ProfileService from '~/services/profile.services';\r\nimport ProductService from '~/services/product.services';\r\n\r\nimport BarChart from '~/charts/BarChart';\r\n\r\nexport default {\r\n    props: ['id'],\r\n    components: {\r\n        BarChart\r\n    },\r\n    data: () => ({\r\n        profile: null,\r\n        profileService: null,\r\n        productService: null,\r\n        chart: {\r\n            loading: true,\r\n            data: {\r\n                labels: [],\r\n                datasets: []\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                barValueSpacing: 20,\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            min: 0,\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        }\r\n    }),\r\n    methods: {\r\n        sum(products, key, alt = false) {\r\n            if (alt)\r\n                return products.map(product => product.alt).reduce((a, v) => a + v[key], 0);\r\n            return products.reduce((a,v) => a + v[key], 0);\r\n        },\r\n        async reload() {\r\n            let profile = await this.profileService.findOne({ id: this.id });\r\n            console.log(profile);\r\n            for (let product of profile.products) {\r\n                product.alt = await this.productService.getAlternative(product.type);\r\n            }\r\n            this.profile = profile;\r\n            this.chart.data.labels = this.profile.products.map(product => product.type);\r\n            this.chart.data.datasets = [\r\n                {\r\n                    label: \"Current\",\r\n                    backgroundColor: \"yellow\",\r\n                    data: this.profile.products.map(product => product.yearly)\r\n                },\r\n                {\r\n                    label: \"Amway\",\r\n                    backgroundColor: \"blue\",\r\n                    data: this.profile.products.map(product => product.alt.yearly)\r\n                }\r\n            ];\r\n            this.$forceUpdate();\r\n            this.chart.loading = false;\r\n        }\r\n    },\r\n    async mounted() {\r\n        this.profileService = new ProfileService(this.$fireStore);\r\n        this.productService = new ProductService(this.$fireStore);\r\n        this.reload();\r\n    }\r\n}\r\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Viewer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Viewer.vue?vue&type=script&lang=js&\"","import './VSimpleTable.sass'\n\nimport { convertToUnit } from '../../util/helpers'\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\n\nexport default mixins(Themeable).extend({\n  name: 'v-simple-table',\n\n  props: {\n    dense: Boolean,\n    fixedHeader: Boolean,\n    height: [Number, String],\n  },\n\n  computed: {\n    classes (): Record<string, boolean> {\n      return {\n        'v-data-table--dense': this.dense,\n        'v-data-table--fixed-height': !!this.height && !this.fixedHeader,\n        'v-data-table--fixed-header': this.fixedHeader,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  methods: {\n    genWrapper () {\n      return this.$slots.wrapper || this.$createElement('div', {\n        staticClass: 'v-data-table__wrapper',\n        style: {\n          height: convertToUnit(this.height),\n        },\n      }, [\n        this.$createElement('table', this.$slots.default),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-data-table',\n      class: this.classes,\n    }, [\n      this.$slots.top,\n      this.genWrapper(),\n      this.$slots.bottom,\n    ])\n  },\n})\n","import { render, staticRenderFns } from \"./Viewer.vue?vue&type=template&id=318fcf46&\"\nimport script from \"./Viewer.vue?vue&type=script&lang=js&\"\nexport * from \"./Viewer.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  \"4dc92337\"\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VProgressCircular } from 'vuetify/lib/components/VProgressCircular';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSimpleTable } from 'vuetify/lib/components/VDataTable';\ninstallComponents(component, {VCol,VContainer,VProgressCircular,VRow,VSimpleTable})\n","import { firestore } from \"firebase\";\r\nimport { IAlternative, IFirebaseConfig, IProfile } from \"./common\";\r\n\r\nlet availableProducts: string[] = [\r\n    'Toothpaste',\r\n    'Shampoo',\r\n    'Detergent',\r\n    'Floor Cleaner'\r\n];\r\n\r\nconst alternatives: { [key: string]: IAlternative } = {\r\n    'Generic': { name: null, size: '', life: 0, cost: 0 },\r\n    'Toothpaste': { name: 'Amway Toothpaste', size: '100gm', life: 4, cost: 20 },\r\n    'Shampoo': { name: 'Amway Shampoo', size: '100gm', life: 3, cost: 35 },\r\n};\r\n\r\nexport abstract class ProductService {\r\n    abstract verifyProduct(product: string): Promise<boolean>;\r\n    abstract getAvailableProducts(): Promise<string[]>;\r\n    abstract setAvailableProducts(products: string[]): Promise<void>;\r\n    abstract getAlternative(type: string): Promise<IProfile>;\r\n    abstract setAlternative(type: string, alt: IAlternative): Promise<void>;\r\n}\r\n\r\nexport class LocalProductService extends ProductService {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    round(decimal: number, places: number) {\r\n        return Math.round(decimal * Math.pow(10, places)) / Math.pow(10, places);\r\n    }\r\n\r\n    computeCosts(product: any) {\r\n        product.monthly = this.round(product.cost/product.life, 2) || 0;\r\n        product.yearly = this.round(12*product.cost/product.life, 2) || 0;\r\n        return product;\r\n    }\r\n\r\n    async verifyProduct(product: string) {\r\n        return availableProducts.findIndex(p => p.toLowerCase() == product.toLowerCase()) !== -1;\r\n    }\r\n\r\n    async getAvailableProducts() {\r\n        return availableProducts;\r\n    }\r\n\r\n    async setAvailableProducts(products: string[]) {\r\n        availableProducts = products;\r\n    }\r\n\r\n    async getAlternative(type: string) {\r\n        return this.computeCosts(alternatives[type] || alternatives['Generic']);\r\n    }\r\n\r\n    async setAlternative(type: string, alt: any) {\r\n        alternatives[type] = alt;\r\n        return;\r\n    }\r\n}\r\n\r\nexport class FirebaseProductService extends ProductService {\r\n    db: firestore.Firestore;\r\n    config: IFirebaseConfig;\r\n\r\n    constructor(public database: firestore.Firestore, config: IFirebaseConfig = { collection: \"products\", doc: \"PRODUCTS\" }) {\r\n        super();\r\n        this.db = database;\r\n        this.config = config;\r\n    }\r\n\r\n    round(decimal: number, places: number) {\r\n        return Math.round(decimal * Math.pow(10, places)) / Math.pow(10, places);\r\n    }\r\n\r\n    computeCosts(product: any) {\r\n        product.monthly = this.round(product.cost/product.life, 2) || 0;\r\n        product.yearly = this.round(12*product.cost/product.life, 2) || 0;\r\n        return product;\r\n    }\r\n\r\n    async verifyProduct(product: string) {\r\n        let data = (await this.db.collection(this.config.collection).doc(this.config.doc).get()).data();\r\n        return data[\"available\"].findIndex((p: string) => p == product) !== -1;\r\n    }\r\n\r\n    async getAvailableProducts() {\r\n        let data = (await this.db.collection(this.config.collection).doc(this.config.doc).get()).data();\r\n        return data[\"available\"] || [];\r\n    }\r\n\r\n    async setAvailableProducts(products: any) {\r\n        await this.db.collection(this.config.collection).doc(this.config.doc).set({ available: products }, { merge: true });\r\n    }\r\n\r\n    async getAlternative(type: string) {\r\n        let data = (await this.db.collection(this.config.collection).doc(this.config.doc).get()).data();\r\n        return this.computeCosts(data[\"alternatives\"][type]) || { 'Generic': { name: null, size: '', life: 0, cost: 0, monthly: 0, yearly: 0 } };\r\n    }\r\n\r\n    async setAlternative(type: any, alt: any) {\r\n        await this.db.collection(this.config.collection).doc(this.config.doc).set({ alternatives: { [type]: alt } }, { merge: true });\r\n        return;\r\n    }\r\n}\r\n\r\nconst DefaultProductService = (process.env.DEV) ? LocalProductService : FirebaseProductService;\r\n\r\nexport default DefaultProductService;\r\n","// Exports\nmodule.exports = {};\n","import './VGrid.sass'\n\nimport Vue, { VNode, PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: (str: any) => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str),\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n  render (h, { props, data, children, parent }): VNode {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'))\n\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(props.tag, mergeData(data, { class: classList }), children)\n  },\n})\n","import './VGrid.sass'\n\nimport Vue, { PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst ALIGNMENT = ['start', 'end', 'center']\n\nfunction makeProps (prefix: string, def: () => PropOptions) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def()\n    return props\n  }, {} as Dictionary<PropOptions>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n  },\n  render (h, { props, data, children }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'row',\n        class: classList,\n      }),\n      children\n    )\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fluid\":\"\"}},[_c('viewer',{attrs:{\"id\":_vm.$route.params.id}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//\n//\n//\n//\n//\n//\n\r\nimport Viewer from '~/components/Viewer';\r\n\r\nexport default {\r\n    components: {\r\n        Viewer\r\n    }\r\n}\r\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--2-0!../../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./_id.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--2-0!../../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./_id.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./_id.vue?vue&type=template&id=9b05cb84&\"\nimport script from \"./_id.vue?vue&type=script&lang=js&\"\nexport * from \"./_id.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  \"6d3717fd\"\n  \n)\n\nexport default component.exports\n\n/* nuxt-component-imports */\ninstallComponents(component, {Viewer: require('D:\\\\Projects\\\\amway\\\\src\\\\components\\\\Viewer.vue').default})\n\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VContainer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VContainer})\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AASA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;;;;;AAGA;AACA;AACA;AACA;AAEA;;;;;AAGA;AACA;AACA;AAEA;;;;;AAGA;AACA;AAEA;AACA;AAEA;;;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;AAGA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AArGA;AAwGA;AAKA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAEA;;;;;;AAIA;AACA;AACA;AAEA;;;;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AApGA;AAuGA;AAEA;;;;;;;;;;;;ACjOA;AACA;AACA;;;;;;;;;;;;;;ACFA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AARA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAHA;AANA;AAJA;AAuBA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AA7BA;AACA;AA6BA;AACA;AACA;AACA;AACA;AACA;AA/DA;;AChHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAQA;AACA;AAXA;AACA;AAYA;AACA;AACA;AACA;AAFA;AAQA;AACA;AA3CA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAqCA;AAIA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AA3CA;AA6CA;AAEA;;;;;;;AC5GA;AACA;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AALA;AADA;AACA;AASA;AACA;AACA;AACA;AACA;AAFA;AAIA;AALA;AADA;AACA;AASA;AACA;AACA;AACA;AACA;AAFA;AAIA;AALA;AADA;AACA;AASA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AADA;AACA;AACA;AAdA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AArBA;AACA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAjEA;;;;;;;;ACpEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AARA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAxBA;AACA;AAyBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAGA;AACA;AAFA;AAMA;AACA;AArEA;;;;;;;;;;;;ACpEA;AACA;AACA;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AADA;AADA;;ACTA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}